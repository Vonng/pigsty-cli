{"version":3,"sources":["../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","components/header.js","components/footer.js","commons/eventEmitter.js","config/index.js","actions/types.js","actions/index.js","actions/configData.js","components/codeViewer.js","components/cmdViewer.js","pages/login/index.js","pages/dashBoard/clusterHostItem.js","components/noResultTips.js","pages/dashBoard/clusterItem.js","pages/dashBoard/index.js","pages/playbook/infraProvision.js","pages/playbook/pgsqlProvision.js","pages/playbook/sandboxProvision.js","pages/playbook/removeClusters.js","pages/playbook/monitorOnly.js","pages/playbook/createUser.js","pages/playbook/createDatabase.js","pages/playbook/serviceProvision.js","pages/playbook/index.js","pages/pigstyConfig/index.js","components/forms/editClusterForm.js","components/forms/editClusterHostForm.js","components/forms/editClusterPgUserForm.js","pages/wrap.js","components/loadingCover.js","authorizedRoute.js","App.js","reportWebVitals.js","reducers/account.js","reducers/configData.js","reducers/index.js","store.js","components/toastsPanel.js","components/confirmBox.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","Header","props","state","activeItem","this","history","push","data","console","log","setState","name","location","Sticky","className","onClick","_jumpHome","bind","src","alt","Menu","secondary","Item","active","pathname","handleItemClick","Icon","position","React","Component","withRouter","connect","dispatch","Footer","EventEmitter","Types","Axios","interceptors","request","use","config","timeout","headers","error","eventEmitter","emit","type","msg","reject","response","success","message","indexOf","errorInfo","actions","getConfigData","formParams","callBack","method","url","Config","qs","stringify","jsonYaml","YAML","parse","hasOwnProperty","ActionTypes","GET_CONFIG_DATA_SUCCESS","storeName","catch","saveConfigData","saveLocalConfigData","SAVE_LOCAL_CONFIG_DATA_SUCCESS","addNewCluster","ADD_NEW_CLUSTER_SUCCESS","removeCluster","REMOVE_CLUSTER_SUCCESS","addNewClusterHost","ADD_NEW_CLUSTER_HOST_SUCCESS","removeClusterHost","REMOVE_CLUSTER_HOST_SUCCESS","addNewClusterPgUser","ADD_NEW_CLUSTER_PG_USER_SUCCESS","removeClusterPgUser","REMOVE_CLUSTER_PG_USER_SUCCESS","CodeViewer","codeM","JSONYaml","editor","getValue","toString","backData","sbackData","configData","that","yamlCode","ref","_ref","value","options","theme","tabSize","keyMap","mode","Divider","Button","primary","_saveYaml","_goToPlaybook","CmdViewer","cmdUrl","open","renderCode","clusterName","sseUrl","line","codeMirrorRef","streamSSE","emitter","addListener","_openSSE","close","EventSource","addEventListener","Modal","closeIcon","centered","onClose","closeModal","Content","scrolling","readOnly","lineNumbers","autofocus","Actions","LoginPage","account","ClusterHostItem","hostName","content","callback","flag","hostData","descs","hKeyItem","hKeyIndex","Label","Detail","List","size","icon","basic","_removeClusterHost","fitted","as","Description","NoResultTips","title","desc","buttonText","buttomCallback","ClusterItem","clusterData","renders","hosts","cItem","cIndex","length","editType","confirmButton","ownHostsCount","ownPgUsersCount","vars","pg_users","Card","fluid","_addNewClusterHost","_manageClusterPgUser","Meta","_renderHosts","extra","color","edit","_runScript","_removeCluster","DashBoardPage","children","cKeyItem","cKeyIndex","clusterItem","Fragment","_addNewCluster","_renderClusters","InfraProvision","href","data-lang","Form","Field","Input","action","runScript","label","actionPosition","placeholder","PgsqlProvision","Select","key","text","onChange","_inputHandle","SandboxProvision","RemoveClusters","MonitorOnly","CreateUser","CreateDatabase","ServiceProvision","panes","menuItem","render","Tab","Pane","PlaybookPage","menu","vertical","tabular","PigstyConfigPage","EditClusterForm","setOpen","_inputChange","_editCluster","pg_offline_query","host_ip","pg_role","pg_seq","parseInt","Group","inline","Radio","checked","_editClusterHost","EditClusterPgUserForm","password","roles","expire_in","pgbouncer","comment","splice","findIndex","item","userInfo","pItem","pIndex","_removeClusterPgUser","_renderPgUsers","widths","Checkbox","undefined","find","val","_checkboxHandle","_addNewClusterPgUser","Wrap","path","component","Login","exact","DashBoard","LoadingCover","visible","loadingText","style","marginLeft","AuthorizedRoute","rest","_getConfigData","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","reducers","combineReducers","JSON","pgUser","fIndex","middlewares","store","next","thunk","applyMiddleware","createStore","createStoreWithMiddleware","toastTypeClassName","info","warning","ToastsPanel","toasts","shift","setTimeout","_delItem","tItem","tIndex","forEach","_renderToast","ConfirmBox","cancelButton","parentCallback","Confirm","onCancel","handleCancel","onConfirm","handleConfirm","ReactDOM","document","getElementById"],"mappings":"iMAAA,IAAIA,EAAM,CACT,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,mBAAoB,CACnB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,GAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,uBAAwB,CACvB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,yCAA0C,CACzC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,mBAAoB,CACnB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,yBAA0B,CACzB,IACA,GAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,YAAa,CACZ,KAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,EACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,GAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,WAAY,CACX,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,+BAAgC,CAC/B,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,IACA,KAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,uBAAwB,CACvB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,iBAAkB,C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","file":"static/js/main.162b1900.chunk.js","sourcesContent":["var map = {\n\t\"./apl/apl.js\": [\n\t\t261,\n\t\t30\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t262,\n\t\t31\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t263,\n\t\t32\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t264,\n\t\t33\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t265,\n\t\t34\n\t],\n\t\"./clike/clike.js\": [\n\t\t250,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t266,\n\t\t35\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t267,\n\t\t36\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t268,\n\t\t37\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t251,\n\t\t38\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t269,\n\t\t39\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t270,\n\t\t40\n\t],\n\t\"./css/css.js\": [\n\t\t247,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t271,\n\t\t41\n\t],\n\t\"./d/d.js\": [\n\t\t272,\n\t\t42\n\t],\n\t\"./dart/dart.js\": [\n\t\t273,\n\t\t2,\n\t\t43\n\t],\n\t\"./diff/diff.js\": [\n\t\t274,\n\t\t44\n\t],\n\t\"./django/django.js\": [\n\t\t275,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t276,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t277,\n\t\t45\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t278,\n\t\t46\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t279,\n\t\t47\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t280,\n\t\t48\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t281,\n\t\t49\n\t],\n\t\"./elm/elm.js\": [\n\t\t282,\n\t\t50\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t283,\n\t\t51\n\t],\n\t\"./factor/factor.js\": [\n\t\t284,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t285,\n\t\t52\n\t],\n\t\"./forth/forth.js\": [\n\t\t286,\n\t\t53\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t287,\n\t\t54\n\t],\n\t\"./gas/gas.js\": [\n\t\t288,\n\t\t55\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t289,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t290,\n\t\t56\n\t],\n\t\"./go/go.js\": [\n\t\t291,\n\t\t57\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t292,\n\t\t58\n\t],\n\t\"./haml/haml.js\": [\n\t\t293,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t252,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t294,\n\t\t26\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t253,\n\t\t59\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t295,\n\t\t60\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t296,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t246,\n\t\t0,\n\t\t1,\n\t\t27\n\t],\n\t\"./http/http.js\": [\n\t\t297,\n\t\t61\n\t],\n\t\"./idl/idl.js\": [\n\t\t298,\n\t\t62\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t248,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t299,\n\t\t63\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t300,\n\t\t0,\n\t\t28\n\t],\n\t\"./julia/julia.js\": [\n\t\t301,\n\t\t64\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t302,\n\t\t65\n\t],\n\t\"./lua/lua.js\": [\n\t\t303,\n\t\t66\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t258,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t304,\n\t\t67\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t305,\n\t\t68\n\t],\n\t\"./meta.js\": [\n\t\t154\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t306,\n\t\t69\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t307,\n\t\t70\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t308,\n\t\t71\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t309,\n\t\t72\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t310,\n\t\t73\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t311,\n\t\t74\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t312,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t313,\n\t\t75\n\t],\n\t\"./octave/octave.js\": [\n\t\t314,\n\t\t76\n\t],\n\t\"./oz/oz.js\": [\n\t\t315,\n\t\t77\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t316,\n\t\t78\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t317,\n\t\t0,\n\t\t79\n\t],\n\t\"./perl/perl.js\": [\n\t\t318,\n\t\t80\n\t],\n\t\"./php/php.js\": [\n\t\t319,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t320,\n\t\t81\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t321,\n\t\t82\n\t],\n\t\"./properties/properties.js\": [\n\t\t322,\n\t\t83\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t323,\n\t\t84\n\t],\n\t\"./pug/pug.js\": [\n\t\t259,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t324,\n\t\t85\n\t],\n\t\"./python/python.js\": [\n\t\t254,\n\t\t86\n\t],\n\t\"./q/q.js\": [\n\t\t325,\n\t\t87\n\t],\n\t\"./r/r.js\": [\n\t\t326,\n\t\t88\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t327,\n\t\t89\n\t],\n\t\"./rst/rst.js\": [\n\t\t328,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t249,\n\t\t90\n\t],\n\t\"./rust/rust.js\": [\n\t\t329,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t330,\n\t\t91\n\t],\n\t\"./sass/sass.js\": [\n\t\t256,\n\t\t1,\n\t\t92\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t331,\n\t\t93\n\t],\n\t\"./shell/shell.js\": [\n\t\t332,\n\t\t94\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t333,\n\t\t95\n\t],\n\t\"./slim/slim.js\": [\n\t\t334,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t335,\n\t\t96\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t336,\n\t\t97\n\t],\n\t\"./solr/solr.js\": [\n\t\t337,\n\t\t98\n\t],\n\t\"./soy/soy.js\": [\n\t\t338,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t339,\n\t\t99\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t340,\n\t\t100\n\t],\n\t\"./sql/sql.js\": [\n\t\t341,\n\t\t101\n\t],\n\t\"./stex/stex.js\": [\n\t\t255,\n\t\t102\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t260,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t342,\n\t\t103\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t343,\n\t\t104\n\t],\n\t\"./textile/textile.js\": [\n\t\t344,\n\t\t105\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t345,\n\t\t106\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t346,\n\t\t107\n\t],\n\t\"./toml/toml.js\": [\n\t\t347,\n\t\t108\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t348,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t349,\n\t\t109\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t351,\n\t\t110\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t350,\n\t\t111\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t352,\n\t\t112\n\t],\n\t\"./twig/twig.js\": [\n\t\t353,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t354,\n\t\t113\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t355,\n\t\t114\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t356,\n\t\t115\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t357,\n\t\t116\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t358,\n\t\t117\n\t],\n\t\"./vue/vue.js\": [\n\t\t359,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./wast/wast.js\": [\n\t\t360,\n\t\t25\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t361,\n\t\t118\n\t],\n\t\"./xml/xml.js\": [\n\t\t245,\n\t\t119\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t362,\n\t\t120\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t363,\n\t\t121\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t364,\n\t\t29\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t257,\n\t\t122\n\t],\n\t\"./z80/z80.js\": [\n\t\t365,\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 210;\nmodule.exports = webpackAsyncContext;","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Icon, Menu, Sticky} from 'semantic-ui-react'\r\nimport './header.css';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: ''\r\n        }\r\n    }\r\n\r\n    _jumpHome(){\r\n        const {\r\n            history,\r\n        } = this.props;\r\n        history.push('/');\r\n    }\r\n\r\n    handleItemClick(e,data){\r\n        const {\r\n            history,\r\n        } = this.props;\r\n        console.log(data)\r\n        this.setState({\r\n            activeItem:data.name\r\n        })\r\n        history.push('/'+data.name);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {\r\n            location\r\n        } = this.props;\r\n        const {\r\n            activeItem\r\n        } = this.state;\r\n\r\n\r\n        //let orgSelect = this._renderOrgSelecet();\r\n        return (\r\n            <Sticky>\r\n                <div className='top-header'>\r\n                    <a onClick={this._jumpHome.bind(this)} className=\"sidemenu__logo\">\r\n                        <div className=\"icon-menu\">\r\n                            <img src=\"/img/pigsty/logo-white.svg\" alt=\"pigsty\" />\r\n                        </div>\r\n                        <img className=\"menu-img\" src=\"/img/pigsty/menulogo.svg\" alt=\"pigsty\" />\r\n                    </a>\r\n\r\n                    <Menu secondary className='top-header-menu'>\r\n                        <Menu.Item\r\n                            name=''\r\n                            active={location.pathname === '/'}\r\n                            onClick={this.handleItemClick.bind(this)}\r\n                        >\r\n                            <Icon name='sitemap' />\r\n                            Cluster\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            name='config'\r\n                            active={location.pathname === '/config'}\r\n                            onClick={this.handleItemClick.bind(this)}\r\n                        >\r\n                            <Icon name='settings' />\r\n                            Config\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            name='playbook'\r\n                            active={location.pathname === '/playbook'}\r\n                            onClick={this.handleItemClick.bind(this)}\r\n                        >\r\n                            <Icon name='paper plane outline' />\r\n                            Playbook\r\n                        </Menu.Item>\r\n                        <Menu.Menu position='right'>\r\n                            {/*<Menu.Item>*/}\r\n                            {/*    <Input icon='search' placeholder='Search...' />*/}\r\n                            {/*</Menu.Item>*/}\r\n                            <Menu.Item\r\n                                name='Sign Out'\r\n                                active={activeItem === 'logout'}\r\n                                onClick={this.handleItemClick.bind(this)}\r\n                            />\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </div>\r\n            </Sticky>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    //account: state.account,\r\n    //managerList:state.organization.managerList\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    //logout: (formParams, callBack) => dispatch(actions.logout(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import './footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"copyright\">\r\n                © 2021 pigsty\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import {EventEmitter} from 'events';\r\n\r\nexport default new EventEmitter();\r\n","let _officialServerUrl = '';\r\n//let _officialServerUrl = 'http://127.0.0.1/pigstycli';\r\n\r\n\r\nexport default {\r\n    officialServerUrl:_officialServerUrl,\r\n}\r\n","const Types = {\r\n    //loadInitData.js\r\n    'GET_CONFIG_DATA_SUCCESS':'GET_CONFIG_DATA_SUCCESS',\r\n    'SAVE_CONFIG_DATA_SUCCESS':'SAVE_CONFIG_DATA_SUCCESS',\r\n    'SAVE_LOCAL_CONFIG_DATA_SUCCESS':'SAVE_LOCAL_CONFIG_DATA_SUCCESS',\r\n    'ADD_NEW_CLUSTER_SUCCESS':'ADD_NEW_CLUSTER_SUCCESS',\r\n    'REMOVE_CLUSTER_SUCCESS':'REMOVE_CLUSTER_SUCCESS',\r\n    'ADD_NEW_CLUSTER_HOST_SUCCESS':'ADD_NEW_CLUSTER_HOST_SUCCESS',\r\n    'REMOVE_CLUSTER_HOST_SUCCESS':'REMOVE_CLUSTER_HOST_SUCCESS',\r\n    'ADD_NEW_CLUSTER_PG_USER_SUCCESS':'ADD_NEW_CLUSTER_PG_USER_SUCCESS',\r\n    'REMOVE_CLUSTER_PG_USER_SUCCESS':'REMOVE_CLUSTER_PG_USER_SUCCESS'\r\n\r\n}\r\n\r\nexport default Types;\r\n","import Axios from \"axios\";\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\nimport {\r\n    getConfigData,\r\n    saveConfigData,\r\n    saveLocalConfigData,\r\n    addNewCluster,\r\n    removeCluster,\r\n    addNewClusterHost,\r\n    removeClusterHost,\r\n    addNewClusterPgUser,\r\n    removeClusterPgUser\r\n} from './configData';\r\n\r\n\r\nAxios.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n\r\n    config.timeout = 10000;\r\n    config.headers = {\r\n        'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error\r\n    eventEmitter.emit('showToasts',{\r\n        type:'error',\r\n        msg:error\r\n    })\r\n    return Promise.reject(error);\r\n});\r\nAxios.interceptors.response.use(function (response) {\r\n\r\n    if(response.data.success === false){\r\n        eventEmitter.emit('showToasts',{\r\n            type:'error',\r\n            msg:response.data\r\n        })\r\n    }\r\n    return response\r\n}, function (error) {\r\n    if(error.message === 'Network Error' || error.message.indexOf('timeout') !== -1){\r\n        eventEmitter.emit('showToasts',{\r\n            type:'error',\r\n            msg:error.message\r\n        })\r\n    }else {\r\n        eventEmitter.emit('showToasts',{\r\n            type:'error',\r\n            msg:error.response.data.errorInfo\r\n        })\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\nconst actions = {\r\n    getConfigData,\r\n    saveConfigData,\r\n    saveLocalConfigData,\r\n    addNewCluster,\r\n    removeCluster,\r\n    addNewClusterHost,\r\n    removeClusterHost,\r\n    addNewClusterPgUser,\r\n    removeClusterPgUser\r\n}\r\n\r\nexport default actions;\r\n","import Axios from \"axios\";\r\nimport qs from 'qs';\r\nimport Config from '../config';\r\nimport ActionTypes from './types';\r\nimport YAML from 'yaml'\r\n//\r\nexport function getConfigData(formParams,callBack) {\r\n    return dispatch=>{\r\n        Axios({\r\n            method:'get',\r\n            url:Config.officialServerUrl+'/api/v1/config',\r\n            data:qs.stringify({\r\n                ...formParams\r\n            })\r\n        }).then(data=>{\r\n            let jsonYaml;\r\n            if(typeof(data.data) == 'object'){\r\n                jsonYaml = data.data;\r\n            }else {\r\n                jsonYaml = YAML.parse(data.data);\r\n            }\r\n            //console.log(jsonYaml);\r\n            if(jsonYaml.hasOwnProperty('all')){\r\n                dispatch({\r\n                    type:ActionTypes.GET_CONFIG_DATA_SUCCESS,\r\n                    storeName:'configData',\r\n                    data:jsonYaml,\r\n                    ...formParams\r\n                });\r\n                if (typeof callBack === 'function') {\r\n                    callBack({\r\n                        success:true,\r\n                        data:jsonYaml,\r\n                    })\r\n                }\r\n            }else {\r\n                if (typeof callBack === 'function') {\r\n                    callBack({\r\n                        success:false,\r\n                        error:data.data\r\n                    })\r\n                }\r\n            }\r\n        }).catch(error=>{\r\n            //debugger;\r\n        })\r\n    }\r\n}\r\n\r\nexport function saveConfigData(formParams,callBack) {\r\n    return dispatch=>{\r\n        Axios({\r\n            method:'post',\r\n            url:Config.officialServerUrl+'/api/v1/config',\r\n            // headers: {\r\n            //     \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8;\"\r\n            // },\r\n            data:formParams\r\n        }).then(data=>{\r\n            console.log(data)\r\n            if(data.message == 'ok'){\r\n                if (typeof callBack === 'function') {\r\n                    callBack({\r\n                        success:true,\r\n                        data:data,\r\n                    })\r\n                }\r\n            }\r\n            // let jsonYaml = YAML.parse(data.data);\r\n            // //console.log(jsonYaml);\r\n            // if(jsonYaml.hasOwnProperty('all')){\r\n            //     dispatch({\r\n            //         type:ActionTypes.SAVE_CONFIG_DATA_SUCCESS,\r\n            //         storeName:'configData',\r\n            //         data:jsonYaml,\r\n            //         ...formParams\r\n            //     });\r\n            //     if (typeof callBack === 'function') {\r\n            //         callBack({\r\n            //             success:true,\r\n            //             data:jsonYaml,\r\n            //         })\r\n            //     }\r\n            // }else {\r\n            //     if (typeof callBack === 'function') {\r\n            //         callBack({\r\n            //             success:false,\r\n            //             error:data.data\r\n            //         })\r\n            //     }\r\n            // }\r\n        }).catch(error=>{\r\n            //debugger;\r\n        })\r\n    }\r\n}\r\n\r\nexport function saveLocalConfigData(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.SAVE_LOCAL_CONFIG_DATA_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNewCluster(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.ADD_NEW_CLUSTER_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeCluster(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.REMOVE_CLUSTER_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNewClusterHost(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.ADD_NEW_CLUSTER_HOST_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeClusterHost(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.REMOVE_CLUSTER_HOST_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNewClusterPgUser(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.ADD_NEW_CLUSTER_PG_USER_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeClusterPgUser(formParams,callBack) {\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:ActionTypes.REMOVE_CLUSTER_PG_USER_SUCCESS,\r\n            storeName:'configData',\r\n            ...formParams\r\n        });\r\n        if (typeof callBack === 'function') {\r\n            callBack({\r\n                success:true,\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button,Divider,Icon} from \"semantic-ui-react\";\r\nimport CodeMirror from '@uiw/react-codemirror';\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport 'codemirror/addon/comment/comment';\r\nimport 'codemirror/addon/edit/matchbrackets';\r\nimport 'codemirror/keymap/sublime';\r\nimport 'codemirror/theme/monokai.css';\r\nimport './codeViewer.css';\r\nimport YAML from 'yaml'\r\nimport actions from \"../actions\";\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\nclass CodeViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.codeM = null;\r\n    }\r\n\r\n    _goToPlaybook(){\r\n        const {\r\n            history,\r\n        } = this.props;\r\n        history.push('/playbook');\r\n    }\r\n\r\n    _saveYaml(){\r\n        const {\r\n            saveLocalConfigData,\r\n            saveConfigData\r\n        } = this.props;\r\n\r\n        let JSONYaml = null;\r\n        try {\r\n            JSONYaml = YAML.parse(this.codeM.editor.getValue());\r\n        } catch (e) {\r\n            console.log(e)\r\n            eventEmitter.emit('showToasts',{\r\n                type:'error',\r\n                msg:e.toString()\r\n            })\r\n        }\r\n        if(JSONYaml){\r\n            saveLocalConfigData({\r\n                data:JSONYaml\r\n            },(backData)=>{\r\n                if(backData.success){\r\n                    saveConfigData(YAML.stringify(JSONYaml),sbackData=>{\r\n                        console.log(sbackData);\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            configData\r\n        } = this.props;\r\n        let that = this;\r\n        let yamlCode = YAML.stringify(configData);\r\n        //console.log(yamlCode)\r\n        return (\r\n            <div>\r\n                <div className=\"codeViewer\">\r\n                    <CodeMirror\r\n                        ref={_ref=>{\r\n                            if(_ref?.editor){\r\n                                //if(_ref.hasOwnProperty('editor'))\r\n                                that.codeM = _ref;\r\n                            }\r\n                        }}\r\n                        value={yamlCode}\r\n                        options={{\r\n                            theme: 'monokai',\r\n                            tabSize: 2,\r\n                            keyMap: 'sublime',\r\n                            mode: 'yaml',\r\n                            //readOnly:'nocursor',\r\n                            //autofocus:false\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Divider/>\r\n                <div>\r\n                    <Button primary onClick={this._saveYaml.bind(this)}>Save YAML</Button>\r\n                    <Button onClick={this._goToPlaybook.bind(this)}><Icon name='paper plane outline' />Go to Playbook</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    configData:state.configData\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveLocalConfigData: (formParams, callBack) => dispatch(actions.saveLocalConfigData(formParams, callBack)),\r\n    saveConfigData: (formParams, callBack) => dispatch(actions.saveConfigData(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CodeViewer));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Modal} from \"semantic-ui-react\";\r\nimport CodeMirror from '@uiw/react-codemirror';\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport 'codemirror/addon/comment/comment';\r\nimport 'codemirror/addon/edit/matchbrackets';\r\nimport 'codemirror/keymap/sublime';\r\nimport 'codemirror/theme/monokai.css';\r\nimport 'codemirror/theme/twilight.css';\r\nimport './cmdViewer.css';\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\nimport actions from \"../actions\";\r\n\r\nclass CmdViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cmdUrl = '';\r\n        this.state = {\r\n            open:false,\r\n            renderCode:`Loading...`,\r\n            clusterName:'',\r\n            sseUrl:''\r\n        }\r\n        this.line = 0;\r\n        this.codeMirrorRef = null;\r\n        this.streamSSE = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.emitter = eventEmitter.addListener('showCmdViewer',(data)=>{\r\n            this.setState({\r\n                open:true,\r\n                renderCode:`Loading...`,\r\n                sseUrl:data.sseUrl,\r\n                clusterName:data.clusterName\r\n            },()=>{\r\n                this._openSSE();\r\n            })\r\n        })\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            open:false\r\n        })\r\n    }\r\n\r\n    _openSSE(){\r\n        const {\r\n            clusterName,\r\n            sseUrl\r\n        } = this.state;\r\n        let that = this;\r\n        if(this.streamSSE){\r\n            this.streamSSE.close();\r\n        }\r\n        this.streamSSE = new EventSource(sseUrl);\r\n        this.streamSSE?.addEventListener(clusterName,function (e){\r\n            that.setState({\r\n                renderCode:that.state.renderCode+e.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            renderCode,\r\n            open\r\n        } = this.state;\r\n        return (\r\n            <Modal\r\n                closeIcon\r\n                open={open}\r\n                centered={false}\r\n                className={'modal-cmdviewer'}\r\n                onClose={this.closeModal.bind(this)}\r\n            >\r\n                <Modal.Header>Console Logs</Modal.Header>\r\n                <Modal.Content scrolling>\r\n                    <div className=\"cmdViewer\">\r\n                        <CodeMirror\r\n                            ref={(ref)=>{\r\n                                this.codeMirrorRef = ref\r\n                            }}\r\n                            value={renderCode}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                tabSize: 2,\r\n                                keyMap: 'sublime',\r\n                                mode: 'shell',\r\n                                readOnly:'nocursor',\r\n                                lineNumbers:false,\r\n                                autofocus:false\r\n                            }}\r\n                            // onUpdate={(instance)=>{\r\n                            //     setTimeout(()=>{\r\n                            //         console.log(instance.getScrollInfo().height)\r\n                            //         instance.scrollTo({\r\n                            //             x:0,\r\n                            //             y:instance.getScrollInfo().height\r\n                            //         })\r\n                            //     },200)\r\n                            // }}\r\n\r\n                        />\r\n\r\n                    </div>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary\r\n                        onClick={this.closeModal.bind(this)}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CmdViewer));\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport CodeViewer from \"../../components/codeViewer\";\r\nimport CmdViewer from \"../../components/cmdViewer\";\r\nimport {Button} from \"semantic-ui-react\";\r\nclass LoginPage extends React.Component {\r\n    render() {\r\n        const {\r\n            account,\r\n            location\r\n        } = this.props\r\n        return (\r\n            <div>\r\n                <Button primary>LoginPage</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => ({\r\n    account: state.account,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport actions from \"../../actions\";\r\nimport { Button, List,Icon,Label } from 'semantic-ui-react';\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass ClusterHostItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    _removeClusterHost(){\r\n        const {\r\n            removeClusterHost,\r\n            clusterName,\r\n            hostName\r\n        } = this.props;\r\n\r\n        eventEmitter.emit(\r\n            'showConfirmBox',\r\n            {\r\n                content:'It will remove this cluster host !',\r\n                callback:(flag)=>{\r\n                    console.log(flag)\r\n                    if(flag){\r\n                        removeClusterHost({\r\n                            clusterName,\r\n                            hostName:hostName\r\n                        },callback=>{\r\n\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            hostData,\r\n            hostName\r\n        } = this.props;\r\n        let descs = [];\r\n        if(hostData){\r\n            descs = Object.keys(hostData).map((hKeyItem,hKeyIndex)=>{\r\n                return (\r\n                    <Label key={'k-'+hKeyIndex}>\r\n                        {hKeyItem}:\r\n                        <Label.Detail>{hostData[hKeyItem].toString()}</Label.Detail>\r\n                    </Label>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <List.Item className='mb-1rem'>\r\n                <Button size='mini' icon='trash' basic className='right floated no-shadow'\r\n                    onClick={this._removeClusterHost.bind(this)}\r\n                />\r\n                <Icon\r\n                    name='hdd outline'\r\n                    className='left floated'\r\n                    fitted\r\n                    size='large'\r\n                />\r\n                <List.Content>\r\n                    <List.Header as='a'>{hostName}</List.Header>\r\n                    <List.Description className='mt-5px'>\r\n                        {descs}\r\n                    </List.Description>\r\n                </List.Content>\r\n            </List.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeClusterHost: (formParams, callBack) => dispatch(actions.removeClusterHost(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ClusterHostItem));\r\n","import React from 'react';\r\nexport default class NoResultTips extends React.Component {\r\n    render() {\r\n        const {\r\n            title,\r\n            desc,\r\n            buttonText,\r\n            buttomCallback\r\n        } = this.props\r\n        return (\r\n            <div className=\"empty\">\r\n                <p className=\"empty-title h5\">{title?title:'nothing'}</p>\r\n                {desc?(\r\n                    <p className=\"empty-subtitle font-lighter\">{desc}</p>\r\n                ):null}\r\n\r\n                {typeof buttomCallback == \"function\"?(\r\n                    <div className=\"empty-action\">\r\n                        <button className=\"btn btn-lg btn-block btn-success\">{buttonText?buttonText:'refresh'}</button>\r\n                    </div>\r\n                ):null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport actions from \"../../actions\";\r\nimport { Button, Card,Icon,List } from 'semantic-ui-react';\r\nimport ClusterHostItem from \"./clusterHostItem\";\r\nimport NoResultTips from \"../../components/noResultTips\";\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\nimport Config from \"../../config\";\r\n\r\nconst styles = {\r\n    clusterIcon:{\r\n        fontSize:'3rem'\r\n    }\r\n}\r\n\r\nclass ClusterItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    _renderHosts(){\r\n        const {\r\n            clusterData,\r\n            clusterName\r\n        } = this.props;\r\n\r\n        let renders = [];\r\n        if(clusterData?.hosts){\r\n            renders = Object.keys(clusterData?.hosts).map((cItem,cIndex)=>{\r\n                return <ClusterHostItem\r\n                    key={'key-'+cIndex}\r\n                    clusterName={clusterName}\r\n                    hostName={cItem}\r\n                    hostData={clusterData.hosts[cItem]}\r\n                />\r\n            });\r\n        }\r\n\r\n        if(renders.length === 0){\r\n            return <NoResultTips title={'no hosts'}/>\r\n        }\r\n\r\n        return renders;\r\n\r\n    }\r\n\r\n\r\n    _addNewClusterHost(){\r\n        const {\r\n            clusterName\r\n        } = this.props;\r\n        eventEmitter.emit(\r\n            'showEditClusterHostForm',\r\n            {\r\n                editType:'add',\r\n                clusterName,\r\n                callback:(flag)=>{\r\n                    console.log(flag)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    _manageClusterPgUser(){\r\n        const {\r\n            clusterName,\r\n            clusterData\r\n        } = this.props;\r\n        eventEmitter.emit(\r\n            'showEditClusterPgUserForm',\r\n            {\r\n                clusterName,\r\n                clusterData,\r\n                callback:(flag)=>{\r\n                    console.log(flag)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    _runScript(){\r\n        const {\r\n            clusterData,\r\n            clusterName\r\n        } = this.props;\r\n        eventEmitter.emit(\r\n            'showConfirmBox',\r\n            {\r\n                content:'Are you sure run this script ?',\r\n                confirmButton:'Run',\r\n                callback:(flag)=>{\r\n                    if(flag){\r\n                        eventEmitter.emit(\r\n                            'showCmdViewer',\r\n                            {\r\n                                sseUrl:Config.officialServerUrl+'/api/v1/pgsql/'+clusterName+'/init',\r\n                                clusterName:clusterName\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    _removeCluster(){\r\n        const {\r\n            removeCluster,\r\n            clusterData,\r\n            clusterName\r\n        } = this.props;\r\n\r\n        eventEmitter.emit(\r\n            'showConfirmBox',\r\n            {\r\n                content:'It will remove this cluster !',\r\n                callback:(flag)=>{\r\n                    if(flag){\r\n                        eventEmitter.emit(\r\n                            'showCmdViewer',\r\n                            {\r\n                                sseUrl:Config.officialServerUrl+'/api/v1/pgsql/'+clusterName+'/remove',\r\n                                clusterName:clusterName\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            clusterData,\r\n            clusterName\r\n        } = this.props;\r\n        let ownHostsCount = 0 ;\r\n        if(clusterData.hasOwnProperty('hosts')){\r\n            ownHostsCount = Object.keys(clusterData.hosts).length;\r\n        }\r\n        let ownPgUsersCount = 0;\r\n        if(clusterData?.vars?.pg_users){\r\n            ownPgUsersCount = clusterData?.vars?.pg_users.length;\r\n        }\r\n        return (\r\n            <Card fluid>\r\n                <Card.Content>\r\n                    <Icon\r\n                        name='server'\r\n                        className='left floated mr-1rem'\r\n                        size='large'\r\n                    />\r\n                    <div className='right floated'>\r\n                        <Button size='mini'\r\n                            onClick={this._addNewClusterHost.bind(this)}\r\n                        ><Icon name='plus' />Add Host</Button>\r\n                        <Button size='mini'\r\n                            onClick={this._manageClusterPgUser.bind(this)}\r\n                        ><Icon name='setting' />Pg Users</Button>\r\n                    </div>\r\n\r\n                    <Card.Header>{clusterName}</Card.Header>\r\n                    <Card.Meta>{ownHostsCount} Hosts | {ownPgUsersCount} PgUsers</Card.Meta>\r\n                    <List>\r\n                        {this._renderHosts()}\r\n                    </List>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <div className='flex-row-right'>\r\n                        <Button color={clusterData.edit?'orange':'grey'}\r\n                            onClick={this._runScript.bind(this)}\r\n                        >\r\n                            Run Script\r\n                        </Button>\r\n                        <Button icon='trash'\r\n                            onClick={this._removeCluster.bind(this)}\r\n                        />\r\n                    </div>\r\n                </Card.Content>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewClusterHost: (formParams, callBack) => dispatch(actions.addNewClusterHost(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ClusterItem));\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Icon} from \"semantic-ui-react\";\r\nimport actions from \"../../actions\";\r\nimport ClusterItem from './clusterItem';\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\nclass DashBoardPage extends React.Component {\r\n\r\n    _renderClusters(){\r\n        const {\r\n            configData\r\n        } = this.props;\r\n        let renders = Object.keys(configData.all.children).map((cKeyItem,cKeyIndex)=>{\r\n            let clusterItem = configData.all.children[cKeyItem];\r\n            return <ClusterItem\r\n                key={'key-'+cKeyIndex}\r\n                clusterData={clusterItem}\r\n                clusterName={cKeyItem}\r\n            />\r\n        })\r\n\r\n        return renders;\r\n\r\n    }\r\n\r\n    _addNewCluster(){\r\n        eventEmitter.emit(\r\n            'showEditClusterForm',\r\n            {\r\n                editType:'add',\r\n                callback:(flag)=>{\r\n                    console.log(flag)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            configData,\r\n            location\r\n        } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className='page-wrap'>\r\n                    <div className='flex-row-right mb-1rem'>\r\n                        <Button\r\n                            primary\r\n                            onClick={this._addNewCluster.bind(this)}\r\n                        >\r\n                            <Icon name='plus' />New Cluster\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        {this._renderClusters()}\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => ({\r\n    //account: state.account,\r\n    configData:state.configData\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoardPage);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass InfraProvision extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Infra Provision</h1>\r\n                    <div className=\"lead\">How to pull up infrasturcture on meta node</div>\r\n\r\n                    <h2 id=\"overview\">Overview</h2>\r\n                    <p>Infrastructure initialization is done via <a\r\n                        href=\"https://github.com/Vonng/pigsty/blob/master/infra.yml\"><code>infra.yml</code></a>. The script\r\n                        completes the installation and deployment of <strong>infrastructure</strong> on the <strong>meta\r\n                            node</strong>.</p>\r\n                    <p>``infra.yml<code>takes the metanode (default group name</code>meta`) as the deployment target.</p>\r\n                    <div className=\"highlight\"><pre><code\r\n                        className=\"language-bash\" data-lang=\"bash\">. /infra.yml\r\n</code></pre>\r\n                    </div>\r\n                    <p>! <a href=\"/img/play/infra.svg\"></a></p>\r\n                    <h2 id=\"caution\">Caution</h2>\r\n                    <p><strong>❗️ The initialization of the meta node must be completed before the initialization of the\r\n                        database node can be executed properly</strong></p>\r\n                    <p><code>infra.yml</code> is fixed to work on the group named <a\r\n                        href=\"https://github.com/Vonng/pigsty/blob/master/pigsty.yml#L32\"><code>meta</code></a> in the\r\n                        configuration file</p>\r\n                    <p><strong>meta nodes</strong> can be reused as <strong>normal nodes</strong>, i.e. PostgreSQL databases\r\n                        can be defined and created on meta nodes as well.</p>\r\n                    <p>Pigsty recommends using the default configuration and creating a cluster of <a\r\n                        href=\"https://github.com/Vonng/pigsty/blob/master/pigsty.yml#L43\"><code>pg-meta</code></a> meta-databases\r\n                        on the meta-nodes for hosting Pigsty advanced features.</p>\r\n                    <p>A complete execution of the initialization process can take 2 to 8 minutes, depending on the machine\r\n                        configuration.</p>\r\n                    <h2 id=\"selective-execution\">Selective execution</h2>\r\n                    <p>Users can <strong>selectively execute</strong> a subset of scripts through ansible&rsquo;s tagging\r\n                        mechanism.</p>\r\n                    <p>For example, if you want to execute only the local source initialization part, you can do so with the\r\n                        following command.</p>\r\n                    <div className=\"highlight\"><pre><code\r\n                        className=\"language-bash\" data-lang=\"bash\">. /infra.yml --tags<span>=</span>repo\r\n</code></pre>\r\n                    </div>\r\n                    <p>Please refer to [<strong>task details</strong>](#task details) for specific tags</p>\r\n                    <p>Some common subsets of tasks include.</p>\r\n                    <div className=\"highlight\"><pre><code\r\n                        className=\"language-bash\"\r\n                        data-lang=\"bash\">. /infra.yml --tags<span>=</span>repo -e <span>repo_rebuild</span><span>=</span>\r\n                    <span>true</span>\r\n                    <span># Force a local source to be recreated</span>\r\n. /infra.yml --tags<span>=</span>prometheus_reload <span\r\n                        ># Reload Prometheus configuration</span>\r\n. /infra.yml --tags<span>=</span>nginx_haproxy <span\r\n                        ># Regenerate the Nginx Haproxy index page</span>\r\n. /infra.yml --tags<span>=</span>prometheus_targets,prometheus_reload <span\r\n                        ># Regenerate the Prometheus static monitoring object file and apply</span>\r\n</code></pre>\r\n                    </div>\r\n                    <h2 id=\"script-description\">script description</h2>\r\n                    <p><a href=\"https://github.com/Vonng/pigsty/blob/master/infra.yml\"><code>infra.yml</code></a> does the\r\n                        following stuff:</p>\r\n                    <ul>\r\n                        <li>Deploy and enable local sources</li>\r\n                        <li>Complete metanode initialization</li>\r\n                        <li>Complete meta-node infrastructure initialization\r\n                            <ul>\r\n                                <li>CA infrastructure</li>\r\n                                <li>DNS Nameserver</li>\r\n                                <li>Nginx</li>\r\n                                <li>Prometheus &amp; Alertmanger</li>\r\n                                <li>Grafana</li>\r\n                            </ul>\r\n                        </li>\r\n                        <li>Copy the Pigsty ontology to the meta node</li>\r\n                        <li>Complete database initialization on the meta node (optional, users can reuse the meta node\r\n                            through the standard database cluster initialization process)\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./infra.yml'\r\n                            actionPosition='right'\r\n                            placeholder='--tags=' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfraProvision);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass PgsqlProvision extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Pgsql Provision</h1>\r\n                    <div className=\"lead\">How to define and create postgres clusters?</div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql.yml'\r\n                            actionPosition='right'\r\n                            placeholder='--tags=' />\r\n                        <Form.Field>\r\n                            <Form.Select\r\n                                fluid\r\n                                label='pg_role'\r\n                                options={[\r\n                                    { key: 'p', text: 'primary', value: 'primary' },\r\n                                    { key: 'r', text: 'replica', value: 'replica' },\r\n                                    { key: 'o', text: 'offline', value: 'offline' }\r\n                                ]}\r\n                                name='pg_role'\r\n                                placeholder=''\r\n                                value={''}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,value)\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PgsqlProvision);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass SandboxProvision extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Sandbox Provision</h1>\r\n                    <div className=\"lead\">How to perform one-pass bootstrap for sandbox?</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./sandbox.yml'\r\n                            actionPosition='right'\r\n                            placeholder='--tags=' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SandboxProvision);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass RemoveClusters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Remove Clusters</h1>\r\n                    <div className=\"lead\">How to destroy postgres clusters and instances</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql-remove.yml'\r\n                            actionPosition='right'\r\n                            placeholder='-l=' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveClusters);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass MonitorOnly extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Monitor Only</h1>\r\n                    <div className=\"lead\">How to deploy pigsty monitoring system without provisioning solution?</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql-monitor.yml'\r\n                            actionPosition='right'\r\n                            placeholder='-l' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorOnly);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass CreateUser extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Create User</h1>\r\n                    <div className=\"lead\">How to perform one-pass bootstrap for sandbox?</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql-createuser.yml'\r\n                            actionPosition='right'\r\n                            placeholder='-l' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass CreateDatabase extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Create Database</h1>\r\n                    <div className=\"lead\">How to create new database on running clusters?</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql-createuser.yml'\r\n                            actionPosition='right'\r\n                            placeholder='-l' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateDatabase);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Header, Input, Sticky} from \"semantic-ui-react\";\r\nimport './index.css'\r\n\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\n\r\nclass ServiceProvision extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    runScript(){\r\n        eventEmitter.emit(\r\n            'showCmdViewer',\r\n            {\r\n                cmdUrl:'ldlalacmdUrl'\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {} = this.props\r\n        return (\r\n            <div className='playbook-item'>\r\n                <div className='playbook-item-intro'>\r\n                    <h1>Service Provision</h1>\r\n                    <div className=\"lead\">How to perform one-pass bootstrap for sandbox?</div>\r\n\r\n                </div>\r\n\r\n\r\n                <Form className='playbook-item-run-script' >\r\n                    <Form.Field>\r\n                        <label>Run Script</label>\r\n                        <Input\r\n                            action={{\r\n                                color: 'primary',\r\n                                content: 'Run',\r\n                                onClick:this.runScript\r\n                            }}\r\n                            label='./pgsql-service.yml'\r\n                            actionPosition='right'\r\n                            placeholder='-l' />\r\n                    </Form.Field>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceProvision);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button,Tab} from \"semantic-ui-react\";\r\nimport './index.css'\r\nimport InfraProvision from \"./infraProvision\";\r\nimport PgsqlProvision from \"./pgsqlProvision\";\r\nimport SandboxProvision from \"./sandboxProvision\";\r\nimport RemoveClusters from \"./removeClusters\";\r\nimport MonitorOnly from \"./monitorOnly\";\r\nimport CreateUser from \"./createUser\";\r\nimport CreateDatabase from \"./createDatabase\";\r\nimport ServiceProvision from \"./serviceProvision\";\r\n\r\nconst panes = [\r\n    {\r\n        menuItem: { key: 'infraProvision', icon: 'arrow alternate circle right outline', content: 'Infra Provision' },//'Infra Provision',\r\n        render: () => <Tab.Pane className='playbook-pane'><InfraProvision/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'pgsqlProvision', icon: 'arrow alternate circle right outline', content: 'Pgsql Provision' },//'Pgsql Provision',\r\n        render: () => <Tab.Pane className='playbook-pane'><PgsqlProvision/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'sandboxProvision', icon: 'arrow alternate circle right outline', content: 'Sandbox Provision' },//'Sandbox Provision',\r\n        render: () => <Tab.Pane className='playbook-pane'><SandboxProvision/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'removeClusters', icon: 'arrow alternate circle right outline', content: 'Remove Clusters' },//'Remove Clusters',\r\n        render: () => <Tab.Pane className='playbook-pane'><RemoveClusters/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'monitorOnly', icon: 'arrow alternate circle right outline', content: 'Monitor Only' },//'Monitor Only',\r\n        render: () => <Tab.Pane className='playbook-pane'><MonitorOnly/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'createUser', icon: 'arrow alternate circle right outline', content: 'Create User' },//'Create User',\r\n        render: () => <Tab.Pane className='playbook-pane'><CreateUser/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'createDatabase', icon: 'arrow alternate circle right outline', content: 'Create Database' },//'Create Database',\r\n        render: () => <Tab.Pane className='playbook-pane'><CreateDatabase/></Tab.Pane> },\r\n    {\r\n        menuItem: { key: 'serviceProvision', icon: 'arrow alternate circle right outline', content: 'Service Provision' },//'Service Provision',\r\n        render: () => <Tab.Pane className='playbook-pane'><ServiceProvision/></Tab.Pane> },\r\n]\r\n\r\nclass PlaybookPage extends React.Component {\r\n    render() {\r\n        const {\r\n        } = this.props\r\n        return (\r\n            <div className='page-wrap playbook'>\r\n                <Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaybookPage);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport './index.css'\r\nimport CodeViewer from \"../../components/codeViewer\";\r\n\r\n\r\nconst panes = [\r\n    // {\r\n    //     menuItem: { key: 'ConfigForm', icon: 'edit outline', content: 'Config Editor' },//'Config Form',\r\n    //     render: () => <Tab.Pane><ConfigForm/></Tab.Pane>,\r\n    // },\r\n    {\r\n        menuItem: { key: 'YAML', icon: 'code', content: 'YAML' },//'YAML',\r\n        render: () => <Tab.Pane><CodeViewer/></Tab.Pane>,\r\n    },\r\n]\r\n\r\nclass PigstyConfigPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const {\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className='page-wrap pigsty-config'>\r\n                <Tab panes={panes} />\r\n            </div>\r\n\r\n        )\r\n        /**\r\n        return (\r\n            <div>\r\n                <div>Global Vars</div>\r\n                <div>Children</div>\r\n                <Repo />\r\n                <div>\r\n                    <List>\r\n                        <List.Item>\r\n                            <List.Icon name='All' />\r\n                            <List.Content>\r\n                                <List.Header>vars</List.Header>\r\n                                <List.Description>Source files for project</List.Description>\r\n                                <List.List>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header as={'a'} href={'http://www.baidu.com'}>proxy_env</List.Header>\r\n                                            <List.Description>Your site's theme</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header as={'a'} href={'http://www.baidu.com'}>repo_enabled</List.Header>\r\n                                            <List.Description>Your site's theme</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header as={'a'} href={'http://www.baidu.com'}>repo_name</List.Header>\r\n                                            <List.Description>Your site's theme</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header as={'a'} href={'http://www.baidu.com'}>repo_address</List.Header>\r\n                                            <List.Description>Your site's theme</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header as={'a'} href={'http://www.baidu.com'}>repo_port</List.Header>\r\n                                            <List.Description>Your site's theme</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header>repo</List.Header>\r\n                                            <List.Description>Packaged theme files</List.Description>\r\n                                            <List.List>\r\n                                                <List.Item>\r\n                                                    <List.Icon name='folder' />\r\n                                                    <List.Content>\r\n                                                        <List.Header>default</List.Header>\r\n                                                        <List.Description>Default packaged theme</List.Description>\r\n                                                    </List.Content>\r\n                                                </List.Item>\r\n                                                <List.Item>\r\n                                                    <List.Icon name='folder' />\r\n                                                    <List.Content>\r\n                                                        <List.Header>my_theme</List.Header>\r\n                                                        <List.Description>\r\n                                                            Packaged themes are also available in this folder\r\n                                                        </List.Description>\r\n                                                    </List.Content>\r\n                                                </List.Item>\r\n                                            </List.List>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='file' />\r\n                                        <List.Content>\r\n                                            <List.Header>theme.config</List.Header>\r\n                                            <List.Description>\r\n                                                Config file for setting packaged themes\r\n                                            </List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                </List.List>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='folder' />\r\n                            <List.Content>\r\n                                <List.Header>dist</List.Header>\r\n                                <List.Description>Compiled CSS and JS files</List.Description>\r\n                                <List.List>\r\n                                    <List.Item>\r\n                                        <List.Icon name='folder' />\r\n                                        <List.Content>\r\n                                            <List.Header>components</List.Header>\r\n                                            <List.Description>\r\n                                                Individual component CSS and JS\r\n                                            </List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                </List.List>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='file' />\r\n                            <List.Content>\r\n                                <List.Header>semantic.json</List.Header>\r\n                                <List.Description>Contains build settings for gulp</List.Description>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                    </List>\r\n                </div>\r\n\r\n                <div>\r\n                    node_dns_hosts\r\n                    <span>\r\n                        static dns records in /etc/hosts\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    10.10.10.10 yum.pigsty\r\n                </div>\r\n                <div>\r\n                    10.10.10.10 yum.pigsty\r\n                </div>\r\n                <div>\r\n                    node_dns_server\r\n                    <span>\r\n                        add (default) | none (skip) | overwrite (remove old settings)\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    add\r\n                </div>\r\n\r\n                <RepoUpstreams />\r\n            </div>\r\n\r\n        );\r\n         **/\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PigstyConfigPage);\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Form, Modal} from \"semantic-ui-react\";\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\nimport actions from \"../../actions\";\r\n\r\nclass EditClusterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            editType: 'add',//add||edit\r\n            clusterName: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showEditClusterForm', (data) => {\r\n            this.setState({\r\n                open: true,\r\n                ...data\r\n            })\r\n        })\r\n    }\r\n\r\n    _editCluster(){\r\n        const {\r\n            addNewCluster\r\n        } = this.props;\r\n        const {\r\n            clusterName\r\n        } = this.state;\r\n\r\n        if(clusterName.length === 0 || clusterName.length > 50){\r\n            eventEmitter.emit('showToasts',{\r\n                type:'error',\r\n                msg:'cluster name length error'\r\n            })\r\n            return false;\r\n        }\r\n\r\n        addNewCluster({\r\n            clusterName\r\n        },(backData)=>{\r\n            this.setOpen(false)\r\n        })\r\n    }\r\n\r\n    setOpen(flag) {\r\n        this.setState({\r\n            open: flag,\r\n            clusterName:'',\r\n            editType:'add'\r\n        })\r\n    }\r\n\r\n    _inputChange(name, value) {\r\n        console.log(name);\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {\r\n            open,\r\n            clusterName,\r\n            editType\r\n        } = this.state;\r\n\r\n        return (\r\n            <Modal\r\n                onClose={this.setOpen.bind(this, false)}\r\n                open={open}\r\n                size='mini'\r\n            >\r\n                <Modal.Header>{editType === 'add'?'Add Cluster':'Edit Cluster'}</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Cluster Name</label>\r\n                            <Form.Input\r\n                                value={clusterName}\r\n                                placeholder='name'\r\n                                name='clusterName'\r\n                                onChange={(e, {name, value}) => {\r\n                                    this._inputChange(name, value)\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button basic\r\n                        onClick={this.setOpen.bind(this,false)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        primary\r\n                        onClick={this._editCluster.bind(this)}\r\n                    >Save</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewCluster: (formParams, callBack) => dispatch(actions.addNewCluster(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditClusterForm));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button,Form,Checkbox,Dropdown,Icon,Input,Modal} from \"semantic-ui-react\";\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\nimport actions from \"../../actions\";\r\nclass EditClusterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open:false,\r\n            editType:'add',//add || edit\r\n            pg_offline_query:false,\r\n            host_ip:'',\r\n            pg_role:'',\r\n            pg_seq:'',\r\n            clusterName:null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showEditClusterHostForm', (data) => {\r\n            this.setState({\r\n                open: true,\r\n                ...data\r\n            })\r\n        })\r\n    }\r\n\r\n    setOpen(flag){\r\n        this.setState({\r\n            open:flag\r\n        })\r\n    }\r\n\r\n    _inputHandle(name,value){\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    _editClusterHost(){\r\n        const {\r\n            addNewClusterHost\r\n        } = this.props;\r\n        const {\r\n            pg_offline_query,\r\n            host_ip,\r\n            pg_role,\r\n            pg_seq,\r\n            clusterName\r\n        } = this.state;\r\n\r\n        if(clusterName){\r\n            addNewClusterHost({\r\n                pg_offline_query,\r\n                host_ip,\r\n                pg_role,\r\n                pg_seq,\r\n                clusterName\r\n            },(callback)=>{\r\n                this.setOpen(false)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {\r\n            open,\r\n            pg_offline_query,\r\n            host_ip,\r\n            pg_role,\r\n            pg_seq,\r\n            editType\r\n        } = this.state;\r\n        const {\r\n            configData\r\n        } = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                onClose={this.setOpen.bind(this,false)}\r\n                open={open}\r\n                size='mini'\r\n            >\r\n                <Modal.Header>{editType === 'add'?'Add Cluster Host':'Edit Cluster Host'}</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>host_ip</label>\r\n                            <Input\r\n                                placeholder='0.0.0.0'\r\n                                name='host_ip'\r\n                                value={host_ip}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,value)\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>pg_seq</label>\r\n                            <Input\r\n                                placeholder='0'\r\n                                name='pg_seq'\r\n                                value={pg_seq}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,parseInt(value))\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Group inline>\r\n                            <label>pg_offline_query</label>\r\n                            <Form.Radio\r\n                                label='true'\r\n                                name='pg_offline_query'\r\n                                checked={pg_offline_query === true}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,true)\r\n                                }}\r\n                            />\r\n                            <Form.Radio\r\n                                label='false'\r\n                                name='pg_offline_query'\r\n                                checked={pg_offline_query === false}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,false)\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Field>\r\n                            <Form.Select\r\n                                fluid\r\n                                label='pg_role'\r\n                                options={[\r\n                                    { key: 'p', text: 'primary', value: 'primary' },\r\n                                    { key: 'r', text: 'replica', value: 'replica' },\r\n                                    { key: 'o', text: 'offline', value: 'offline' }\r\n                                ]}\r\n                                name='pg_role'\r\n                                placeholder=''\r\n                                value={pg_role}\r\n                                onChange={(e,{name,value})=>{\r\n                                    this._inputHandle(name,value)\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button basic\r\n                            onClick={this.setOpen.bind(this,false)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        primary\r\n                        onClick={this._editClusterHost.bind(this)}\r\n                    >Save</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    configData:state.configData\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewClusterHost: (formParams, callBack) => dispatch(actions.addNewClusterHost(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditClusterForm));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Card, Checkbox, Form, Icon, Input, Label, List, Modal} from \"semantic-ui-react\";\r\nimport eventEmitter from \"../../commons/eventEmitter\";\r\nimport actions from \"../../actions\";\r\n\r\nclass EditClusterPgUserForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            editType: 'add',//add || edit\r\n            name: '',\r\n            password: '',\r\n            roles: ['dbrole_offline'],\r\n            expire_in: 365,\r\n            pgbouncer: false,\r\n            comment: '',\r\n            clusterData: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showEditClusterPgUserForm', (data) => {\r\n            this.setState({\r\n                open: true,\r\n                ...data\r\n            })\r\n        })\r\n    }\r\n\r\n    setOpen(flag) {\r\n        this.setState({\r\n            open: flag\r\n        })\r\n    }\r\n\r\n    _inputHandle(name, value) {\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    _checkboxHandle(name, value, flag) {\r\n\r\n        if(flag){\r\n            this.setState({\r\n                [name]:[...this.state[name],value]\r\n            })\r\n        }else {\r\n            this.state[name].splice(this.state[name].findIndex(item => item === value), 1)\r\n            this.setState({\r\n                [name]:this.state[name]\r\n            })\r\n        }\r\n    }\r\n\r\n    _editClusterPgUser() {\r\n\r\n    }\r\n\r\n    _addNewClusterPgUser(){\r\n        const {\r\n            addNewClusterPgUser\r\n        } = this.props;\r\n        const {\r\n            name,\r\n            password,\r\n            roles,\r\n            expire_in,\r\n            pgbouncer,\r\n            comment,\r\n            clusterName\r\n        } = this.state;\r\n\r\n        //判断是否重名\r\n        addNewClusterPgUser({\r\n            name,\r\n            password,\r\n            roles,\r\n            expire_in,\r\n            pgbouncer,\r\n            comment,\r\n            clusterName\r\n        },backData=>{\r\n\r\n        })\r\n    }\r\n\r\n    _removeClusterPgUser(name){\r\n        const {\r\n            removeClusterPgUser\r\n        } = this.props;\r\n\r\n        const {\r\n            clusterName\r\n        } = this.state;\r\n\r\n        eventEmitter.emit(\r\n            'showConfirmBox',\r\n            {\r\n                content:'Are you sure ?',\r\n                callback:(flag)=>{\r\n                    if(flag){\r\n                        removeClusterPgUser({\r\n                            name,\r\n                            clusterName\r\n                        },backData=>{\r\n\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    _renderPgUserInfo(userInfo){\r\n        let descs = [];\r\n        if(userInfo){\r\n            descs = userInfo.map((hKeyItem,hKeyIndex)=>{\r\n                return (\r\n                    <Label key={'k-'+hKeyIndex}>\r\n                        {hKeyItem}:\r\n                        <Label.Detail>{userInfo[hKeyItem].toString()}</Label.Detail>\r\n                    </Label>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    _renderPgUsers() {\r\n        const {\r\n            clusterName\r\n        } = this.state;\r\n        const {\r\n            configData\r\n        } = this.props;\r\n        let clusterData = configData.all.children[clusterName]\r\n\r\n        let renders = [];\r\n        if (clusterData?.vars?.pg_users) {\r\n            renders = clusterData.vars.pg_users.map((pItem, pIndex) => {\r\n                return (\r\n                    <List.Item className='mb-1rem'>\r\n                        <Button size='mini' icon='trash' basic className='right floated no-shadow'\r\n                            onClick={this._removeClusterPgUser.bind(this,pItem.name)}\r\n                        />\r\n                        <Icon\r\n                            name='user'\r\n                            className='left floated'\r\n                            fitted\r\n                            size='large'\r\n                        />\r\n                        <List.Content>\r\n                            <List.Header as='a'>{pItem.name}</List.Header>\r\n                            <List.Description className='mt-5px'>\r\n                                {pItem.comment}\r\n                            </List.Description>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                )\r\n            })\r\n        }\r\n\r\n\r\n        return <List>\r\n            {renders}\r\n        </List>;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            open,\r\n            editType,\r\n            name,\r\n            password,\r\n            roles,\r\n            expire_in,\r\n            pgbouncer,\r\n            comment\r\n        } = this.state;\r\n        return (\r\n            <Modal\r\n                onClose={this.setOpen.bind(this, false)}\r\n                open={open}\r\n                size='small'\r\n            >\r\n                <Modal.Header>{'Manage Cluster Pg Users'}</Modal.Header>\r\n                <Modal.Content>\r\n                    {this._renderPgUsers()}\r\n                    <Card fluid>\r\n                        <Card.Content>\r\n                            <Form>\r\n                                <Form.Group widths='equal'>\r\n                                    <Form.Field>\r\n                                        <label>name</label>\r\n                                        <Input\r\n                                            placeholder=''\r\n                                            name='name'\r\n                                            value={name}\r\n                                            onChange={(e, {name, value}) => {\r\n                                                this._inputHandle(name, value)\r\n                                            }}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>password</label>\r\n                                        <Input\r\n                                            placeholder=''\r\n                                            name='password'\r\n                                            value={password}\r\n                                            onChange={(e, {name, value}) => {\r\n                                                this._inputHandle(name, value)\r\n                                            }}\r\n                                        />\r\n                                    </Form.Field>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group inline>\r\n                                    <label>pgbouncer</label>\r\n                                    <Form.Radio\r\n                                        label='true'\r\n                                        name='pgbouncer'\r\n                                        checked={pgbouncer === true}\r\n                                        onChange={(e, {name, value}) => {\r\n                                            this._inputHandle(name, true)\r\n                                        }}\r\n                                    />\r\n                                    <Form.Radio\r\n                                        label='false'\r\n                                        name='pgbouncer'\r\n                                        checked={pgbouncer === false}\r\n                                        onChange={(e, {name, value}) => {\r\n                                            this._inputHandle(name, false)\r\n                                        }}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group inline>\r\n                                    <label>roles</label>\r\n                                    <div className='flex-row-left flex-wrap'>\r\n                                        <Form.Field>\r\n                                            <Form.Checkbox label='dbrole_readonly'\r\n                                                           name='dbrole_readonly'\r\n                                                           checked={(roles.find(val => val === 'dbrole_readonly') !== undefined)}\r\n                                                           onChange={(e,{ checked }) => {\r\n                                                               this._checkboxHandle('roles', 'dbrole_readonly',checked)\r\n                                                           }}\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <Form.Checkbox label='dbrole_offline'\r\n                                                           name='dbrole_offline'\r\n                                                           checked={(roles.find(val => val === 'dbrole_offline') !== undefined)}\r\n                                                           onChange={(e,{ checked }) => {\r\n                                                               this._checkboxHandle('roles', 'dbrole_offline',checked)\r\n                                                           }}\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <Form.Checkbox label='dbrole_readwrite'\r\n                                                           name='dbrole_readwrite'\r\n                                                           checked={roles.find(val => val === 'dbrole_readwrite') !== undefined}\r\n                                                           onChange={(e,{ checked }) => {\r\n                                                               this._checkboxHandle('roles', 'dbrole_readwrite',checked)\r\n                                                           }}\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <Form.Checkbox label='dbrole_admin'\r\n                                                           name='dbrole_admin'\r\n                                                           checked={roles.find(val => val === 'dbrole_admin') !== undefined}\r\n                                                           onChange={(e,{ checked }) => {\r\n                                                               this._checkboxHandle('roles', 'dbrole_admin',checked)\r\n                                                           }}\r\n                                            />\r\n                                        </Form.Field>\r\n                                    </div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Field>\r\n                                    <label>comment</label>\r\n                                    <Input\r\n                                        placeholder='example personal user for interactive queries'\r\n                                        name='comment'\r\n                                        value={comment}\r\n                                        onChange={(e, {name, value}) => {\r\n                                            this._inputHandle(name, value)\r\n                                        }}\r\n                                    />\r\n                                </Form.Field>\r\n                            </Form>\r\n                            <Card.Content extra className='flex-row-center mt-1rem'>\r\n                                <Button\r\n                                    primary\r\n                                    onClick={this._addNewClusterPgUser.bind(this)}\r\n                                >Add</Button>\r\n                            </Card.Content>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button\r\n                        onClick={this.setOpen.bind(this, false)}\r\n                    >Close</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    configData:state.configData\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewClusterPgUser: (formParams, callBack) => dispatch(actions.addNewClusterPgUser(formParams, callBack)),\r\n    removeClusterPgUser: (formParams, callBack) => dispatch(actions.removeClusterPgUser(formParams, callBack)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditClusterPgUserForm));\r\n","import React from 'react'\r\nimport Header from \"../components/header\";\r\nimport Footer from \"../components/footer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Login from \"./login\";\r\nimport DashBoard from \"./dashBoard\";\r\nimport PlaybookPage from \"./playbook\";\r\nimport PigstyConfigPage from './pigstyConfig';\r\nimport CmdViewer from '../components/cmdViewer';\r\nimport EditClusterForm from \"../components/forms/editClusterForm\";\r\nimport EditClusterHostForm from '../components/forms/editClusterHostForm';\r\nimport EditClusterPgUserForm from \"../components/forms/editClusterPgUserForm\";\r\n\r\nclass Wrap extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"inner-page\">\r\n                    <Header/>\r\n                    <div id=\"mainWrap\">\r\n                        <div id=\"mainContent\">\r\n                            <Route path={\"/login\"} component={Login}/>\r\n                            <Route path={\"/\"} exact component={DashBoard}/>\r\n                            <Route path={\"/config\"} component={PigstyConfigPage}/>\r\n                            <Route path={\"/playbook\"} component={PlaybookPage}/>\r\n                        </div>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n                <CmdViewer />\r\n                <EditClusterForm/>\r\n                <EditClusterHostForm/>\r\n                <EditClusterPgUserForm/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wrap;\r\n","import React from 'react';\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\nclass LoadingCover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:props.visible?props.visible:false,\r\n            loadingText:props.loadingText?props.loadingText:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showLoadingCover',(data)=>{\r\n            this.setState({\r\n                visible:data,\r\n                loadingText:'数据加载中...'\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            visible,\r\n            loadingText\r\n        } = this.state;\r\n        if(visible){\r\n            return (\r\n                <div id=\"loadingCover\">\r\n                    <div className=\"loading-overlay\">\r\n                        <div className=\"loading loading-lg\"></div>\r\n                        <div className=\"font-bold\" style={{marginLeft:'2rem'}}>{loadingText}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoadingCover;\r\n","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport LoadingCover from \"./components/loadingCover\";\r\nimport actions from \"./actions\";\r\n\r\nclass AuthorizedRoute extends React.Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    _getConfigData(){\r\n        const {\r\n            getConfigData,\r\n        } = this.props;\r\n        getConfigData({},(backData)=>{\r\n            //\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            component: Component,\r\n            //account,\r\n            configData,\r\n            ...rest\r\n        } = this.props;\r\n\r\n        if(!configData.hasOwnProperty('all')){\r\n            this._getConfigData();\r\n            return <LoadingCover visible={true} loadingText={'initializing...'}/>\r\n        }\r\n\r\n        return (\r\n            <Route {...rest} render={props => {\r\n                return <Component {...props} />\r\n            }} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    //account: state.account,\r\n    configData:state.configData\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    getConfigData: (formParams, callBack) => dispatch(actions.getConfigData(formParams, callBack)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizedRoute);\r\n","import './App.css';\nimport {HashRouter, Switch} from 'react-router-dom';\nimport Wrap from \"./pages/wrap\";\nimport AuthorizedRoute from \"./authorizedRoute\";\nimport 'moment/locale/zh-cn';\n\nfunction App() {\n  return (\n      <HashRouter basename={\"/\"}>\n        <Switch>\n          <AuthorizedRoute path={\"/\"} component={Wrap}/>\n        </Switch>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ActionTypes from '../actions/types';\r\nconst defaultState = {\r\n}\r\n\r\nexport default function onAction (state = defaultState,action){\r\n    return state;\r\n    // switch (action.type){\r\n    //     case ActionTypes.GET_CONFIG_DATA_SUCCESS:\r\n    //         return action.data;;\r\n    //     default:\r\n    //         return state;\r\n    // }\r\n}\r\n","import ActionTypes from '../actions/types';\r\nconst defaultState = {\r\n}\r\n\r\nexport default function onAction (state = defaultState,action){\r\n    switch (action.type){\r\n        case ActionTypes.GET_CONFIG_DATA_SUCCESS:\r\n            return action.data;\r\n        case ActionTypes.SAVE_LOCAL_CONFIG_DATA_SUCCESS:\r\n            return action.data;\r\n        case ActionTypes.ADD_NEW_CLUSTER_SUCCESS:\r\n            state.all.children[action.clusterName] = {\r\n                edit:true,\r\n                hosts:{}\r\n            };\r\n            return JSON.parse(JSON.stringify(state));\r\n        case ActionTypes.ADD_NEW_CLUSTER_HOST_SUCCESS:\r\n            state.all.children[action.clusterName].edit = true;\r\n            state.all.children[action.clusterName].hosts[action.host_ip] = {\r\n                pg_offline_query:action.pg_offline_query,\r\n                pg_role:action.pg_role,\r\n                pg_seq:action.pg_seq,\r\n            }\r\n            return JSON.parse(JSON.stringify(state));\r\n        case ActionTypes.REMOVE_CLUSTER_HOST_SUCCESS:\r\n            state.all.children[action.clusterName].edit = true;\r\n            delete state.all.children[action.clusterName].hosts[action.hostName];\r\n            return JSON.parse(JSON.stringify(state));\r\n\r\n        case ActionTypes.ADD_NEW_CLUSTER_PG_USER_SUCCESS:\r\n            if(!state.all.children[action.clusterName]?.vars?.pg_users){\r\n                state.all.children[action.clusterName].vars.pg_users = [];\r\n            }\r\n            if(state.all.children[action.clusterName]?.vars?.pg_users){\r\n                let pgUser = {\r\n                    name:action.name,\r\n                    password:action.password,\r\n                    roles:action.roles,\r\n                    expire_in:action.expire_in,\r\n                    pgbouncer:action.pgbouncer,\r\n                    comment:action.comment,\r\n                }\r\n\r\n                state.all.children[action.clusterName].vars.pg_users.push(\r\n                    pgUser\r\n                );\r\n                state.all.children[action.clusterName].edit = true;\r\n            }\r\n            return JSON.parse(JSON.stringify(state));\r\n\r\n        case ActionTypes.REMOVE_CLUSTER_PG_USER_SUCCESS:\r\n            if(state.all.children[action.clusterName]?.vars?.pg_users){\r\n                let fIndex = state.all.children[action.clusterName].vars.pg_users.findIndex(item => item.name === action.name)\r\n                state.all.children[action.clusterName].vars.pg_users.splice(fIndex, 1);\r\n                state.all.children[action.clusterName].edit = true;\r\n            }\r\n            return JSON.parse(JSON.stringify(state));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport account from './account';\r\nimport configData from './configData';\r\n\r\nconst reducers = combineReducers({\r\n    account,\r\n    configData\r\n})\r\n\r\nexport default reducers;\r\n","import {applyMiddleware, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n/**\r\n * 自定义log中间件\r\n * @param store\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    if (typeof action === 'function') {\r\n        //console.log('dispatching a function');\r\n    } else {\r\n        //console.log('dispatching ', {...action,...Config.clientInfo});\r\n    }\r\n    const result = next(action);\r\n    //console.log('nextState ', store.getState());\r\n\r\n    return result;\r\n};\r\n\r\nconst middlewares = [\r\n    logger,\r\n    thunk\r\n];\r\n\r\n/**\r\n * 创建store\r\n */\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStoreWithMiddleware(reducers, initialState);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\n\r\nconst toastTypeClassName = {\r\n    info:\"toast-primary\",\r\n    success:\"toast-success\",\r\n    warning:\"toast-warning\",\r\n    error:\"toast-error\"\r\n}\r\n\r\nclass ToastsPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toasts:[]\r\n        }\r\n    }\r\n\r\n    _delItem(){\r\n        const {\r\n            toasts\r\n        } = this.state;\r\n        toasts.shift();\r\n        this.setState({\r\n            toasts:toasts\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showToasts',(data)=>{\r\n            this.setState({\r\n                toasts:[\r\n                    ...this.state.toasts,\r\n                    data\r\n                ]\r\n            },()=>{\r\n                setTimeout(()=>{\r\n                    this._delItem();\r\n                },3000)\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //eventEmitter.removeListener(this.emitter);\r\n    }\r\n\r\n    _renderToast(tItem,tIndex){\r\n        let className = 'toast '+toastTypeClassName[tItem.type];\r\n        return (\r\n            <div key={tIndex} className={className}>\r\n                <div className='toast-content'>\r\n                    {tItem.msg}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            account\r\n        } = this.props;\r\n        const {\r\n            toasts\r\n        } = this.state;\r\n        let renders = [];\r\n        toasts.forEach((tItem,tIndex)=>{\r\n            renders.push(this._renderToast(tItem,tIndex))\r\n        })\r\n        return (\r\n            <div id=\"toastsPanel\">\r\n                {renders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToastsPanel;\r\n","import React from 'react'\r\nimport {Confirm} from 'semantic-ui-react'\r\nimport eventEmitter from \"../commons/eventEmitter\";\r\n\r\nexport default class ConfirmBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            content:'',\r\n            confirmButton:'OK',\r\n            cancelButton:'Cancel'\r\n        }\r\n        this.parentCallback = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emitter = eventEmitter.addListener('showConfirmBox',(data)=>{\r\n            this.setState({\r\n                ...data,\r\n                open:true,\r\n            });\r\n            this.parentCallback = data.callback\r\n        })\r\n    }\r\n\r\n\r\n    handleConfirm(){\r\n        this.setState({\r\n            content: 'Are you sure?',\r\n            confirmButton:'OK',\r\n            cancelButton:'Cancel',\r\n            open: false\r\n        },()=>{\r\n            if(typeof this.parentCallback === 'function'){\r\n                this.parentCallback(true)\r\n            }\r\n        })\r\n    }\r\n    handleCancel(){\r\n        this.setState({\r\n            content: 'Are you sure?',\r\n            confirmButton:'OK',\r\n            cancelButton:'Cancel',\r\n            open: false\r\n        },()=>{\r\n            if(typeof this.parentCallback === 'function'){\r\n                this.parentCallback(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            open,\r\n            content,\r\n            confirmButton,\r\n            cancelButton\r\n        } = this.state;\r\n\r\n        return (\r\n            <Confirm\r\n                size='mini'\r\n                open={open}\r\n                content={content}\r\n                confirmButton={confirmButton}\r\n                cancelButton={cancelButton}\r\n                onCancel={this.handleCancel.bind(this)}\r\n                onConfirm={this.handleConfirm.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport LoadingCover from \"./components/loadingCover\";\nimport ToastsPanel from \"./components/toastsPanel\";\nimport ConfirmBox from \"./components/confirmBox\";\nimport 'semantic-ui-less/semantic.less'\n\nReactDOM.render(\n    <Provider store={store}>\n\n            <React.Fragment>\n                <LoadingCover/>\n                <ToastsPanel/>\n                <ConfirmBox/>\n                <App/>\n            </React.Fragment>\n\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}