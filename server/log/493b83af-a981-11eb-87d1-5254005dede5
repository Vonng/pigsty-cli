2021-04-30 14:57:11,593 p=18151 u=root n=ansible | PLAY [Init EcoX Cluster] *******************************************************
2021-04-30 14:57:11,634 p=18151 u=root n=ansible | TASK [ecox : Node configure disable firewall] **********************************
2021-04-30 14:57:13,577 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:13,579 p=18151 u=root n=ansible | TASK [ecox : Node configure stop firewall] *************************************
2021-04-30 14:57:14,088 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:14,091 p=18151 u=root n=ansible | TASK [ecox : Create os group postgres] *****************************************
2021-04-30 14:57:14,561 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:14,570 p=18151 u=root n=ansible | TASK [ecox : Create dbsu postgres] *********************************************
2021-04-30 14:57:15,185 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:15,189 p=18151 u=root n=ansible | TASK [ecox : Fix pg home directory ownership] **********************************
2021-04-30 14:57:15,726 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:15,730 p=18151 u=root n=ansible | TASK [ecox : Copy PostgreSQL RPMS] *********************************************
2021-04-30 14:57:18,256 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:18,259 p=18151 u=root n=ansible | TASK [ecox : Install PostgreSQL RPMS] ******************************************
2021-04-30 14:57:20,770 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:20,774 p=18151 u=root n=ansible | TASK [ecox : Link /usr/pgsql to current version] *******************************
2021-04-30 14:57:21,185 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:21,188 p=18151 u=root n=ansible | TASK [ecox : Add pg bin dir to profile path] ***********************************
2021-04-30 14:57:21,874 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:21,877 p=18151 u=root n=ansible | TASK [ecox : Fix directory ownership] ******************************************
2021-04-30 14:57:22,282 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:22,285 p=18151 u=root n=ansible | TASK [ecox : Copy EcoX RPMS] ***************************************************
2021-04-30 14:57:23,194 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:23,197 p=18151 u=root n=ansible | TASK [ecox : Install EcoX RPMS] ************************************************
2021-04-30 14:57:23,748 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:23,752 p=18151 u=root n=ansible | TASK [ecox : Copy EcoX systemd service file] ***********************************
2021-04-30 14:57:24,435 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:24,438 p=18151 u=root n=ansible | TASK [ecox : Enable EcoX systemd] **********************************************
2021-04-30 14:57:24,979 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:24,982 p=18151 u=root n=ansible | TASK [ecox : Copy pgbouncer pkg] ***********************************************
2021-04-30 14:57:25,896 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:25,899 p=18151 u=root n=ansible | TASK [ecox : Install pgbouncer pkg] ********************************************
2021-04-30 14:57:26,311 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:26,315 p=18151 u=root n=ansible | TASK [ecox : Check necessary variables exists] *********************************
2021-04-30 14:57:26,335 p=18151 u=root n=ansible | ok: [172.21.0.16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2021-04-30 14:57:26,339 p=18151 u=root n=ansible | TASK [ecox : Fetch variables via pg_cluster] ***********************************
2021-04-30 14:57:26,421 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:26,424 p=18151 u=root n=ansible | TASK [ecox : Set cluster basic facts for hosts] ********************************
2021-04-30 14:57:26,479 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:26,482 p=18151 u=root n=ansible | TASK [ecox : Assert cluster primary singleton] *********************************
2021-04-30 14:57:26,500 p=18151 u=root n=ansible | ok: [172.21.0.16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2021-04-30 14:57:26,503 p=18151 u=root n=ansible | TASK [ecox : Setup cluster primary ip address] *********************************
2021-04-30 14:57:26,520 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:26,524 p=18151 u=root n=ansible | TASK [ecox : Setup repl upstream for primary] **********************************
2021-04-30 14:57:26,537 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:26,540 p=18151 u=root n=ansible | TASK [ecox : Setup repl upstream for replicas] *********************************
2021-04-30 14:57:26,553 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:26,557 p=18151 u=root n=ansible | TASK [ecox : Debug print instance summary] *************************************
2021-04-30 14:57:26,575 p=18151 u=root n=ansible | ok: [172.21.0.16] => {
    "msg": "cluster=pg-test2 service=pg-test2-primary instance=pg-test2-1 replication=[primary:itself]->172.21.0.16"
}
2021-04-30 14:57:26,579 p=18151 u=root n=ansible | TASK [ecox : Build zk cluster url] *********************************************
2021-04-30 14:57:26,594 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:26,597 p=18151 u=root n=ansible | TASK [ecox : Build zkhost] *****************************************************
2021-04-30 14:57:26,610 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:26,614 p=18151 u=root n=ansible | TASK [ecox : Check for existing postgres instance] *****************************
2021-04-30 14:57:27,017 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:27,020 p=18151 u=root n=ansible | TASK [ecox : Set fact whether pg port is open] *********************************
2021-04-30 14:57:27,036 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:27,039 p=18151 u=root n=ansible | TASK [ecox : Abort due to existing postgres instance] **************************
2021-04-30 14:57:27,053 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:27,064 p=18151 u=root n=ansible | TASK [ecox : Clean existing postgres instance] *********************************
2021-04-30 14:57:27,077 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:27,080 p=18151 u=root n=ansible | TASK [ecox : Shutdown existing postgres service] *******************************
2021-04-30 14:57:27,493 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:27,500 p=18151 u=root n=ansible | TASK [ecox : Remove registerd zookeeper service] *******************************
2021-04-30 14:57:27,908 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:27,911 p=18151 u=root n=ansible | TASK [ecox : Remove existing postgres data] ************************************
2021-04-30 14:57:28,316 p=18151 u=root n=ansible | changed: [172.21.0.16] => (item=/pg)
2021-04-30 14:57:28,320 p=18151 u=root n=ansible | TASK [ecox : Make sure main and backup dir exists] *****************************
2021-04-30 14:57:28,717 p=18151 u=root n=ansible | ok: [172.21.0.16] => (item=/export)
2021-04-30 14:57:28,721 p=18151 u=root n=ansible | TASK [ecox : Create postgres directory structure] ******************************
2021-04-30 14:57:29,139 p=18151 u=root n=ansible | ok: [172.21.0.16] => (item=/export/postgres/pg-test2-13)
2021-04-30 14:57:29,549 p=18151 u=root n=ansible | ok: [172.21.0.16] => (item=/export/postgres/pg-test2-13/bin)
2021-04-30 14:57:29,934 p=18151 u=root n=ansible | ok: [172.21.0.16] => (item=/export/postgres/pg-test2-13/tmp)
2021-04-30 14:57:30,340 p=18151 u=root n=ansible | changed: [172.21.0.16] => (item=/var/run/postgresql)
2021-04-30 14:57:30,346 p=18151 u=root n=ansible | TASK [ecox : Create links from current cluster] ********************************
2021-04-30 14:57:30,759 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:30,762 p=18151 u=root n=ansible | TASK [ecox : Check if postgres data folder exists] *****************************
2021-04-30 14:57:31,289 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:31,292 p=18151 u=root n=ansible | TASK [ecox : Abort due to pgdata is exists] ************************************
2021-04-30 14:57:31,306 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:31,309 p=18151 u=root n=ansible | TASK [ecox : Clean pgdata] *****************************************************
2021-04-30 14:57:31,751 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:31,755 p=18151 u=root n=ansible | TASK [ecox : Make sure data dir exists] ****************************************
2021-04-30 14:57:32,149 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:32,152 p=18151 u=root n=ansible | TASK [ecox : Copy postgres scripts to /pg/bin/] ********************************
2021-04-30 14:57:33,849 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:33,853 p=18151 u=root n=ansible | TASK [ecox : Get config parameter page count] **********************************
2021-04-30 14:57:34,256 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:34,259 p=18151 u=root n=ansible | TASK [ecox : Get config parameter page size] ***********************************
2021-04-30 14:57:34,658 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:34,662 p=18151 u=root n=ansible | TASK [ecox : Tune shared buffer and work mem] **********************************
2021-04-30 14:57:34,687 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:34,690 p=18151 u=root n=ansible | TASK [ecox : Hanlde small size mem occasion] ***********************************
2021-04-30 14:57:34,708 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:34,711 p=18151 u=root n=ansible | TASK [ecox : Calculate postgres mem params] ************************************
2021-04-30 14:57:34,729 p=18151 u=root n=ansible | skipping: [172.21.0.16]
2021-04-30 14:57:34,732 p=18151 u=root n=ansible | TASK [ecox : Init postgres data] ***********************************************
2021-04-30 14:57:36,334 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:36,337 p=18151 u=root n=ansible | TASK [ecox : Replace tuned postgres.conf] **************************************
2021-04-30 14:57:37,214 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:37,217 p=18151 u=root n=ansible | TASK [ecox : Render hba rules] *************************************************
2021-04-30 14:57:37,974 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:37,977 p=18151 u=root n=ansible | TASK [ecox : Generate ecox.conf] ***********************************************
2021-04-30 14:57:38,691 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:38,694 p=18151 u=root n=ansible | TASK [ecox : Start PostgreSQL] *************************************************
2021-04-30 14:57:40,233 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:40,236 p=18151 u=root n=ansible | TASK [ecox : Wait for postgres primary online] *********************************
2021-04-30 14:57:40,745 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:40,748 p=18151 u=root n=ansible | TASK [ecox : Render init roles sql] ********************************************
2021-04-30 14:57:41,513 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:41,517 p=18151 u=root n=ansible | TASK [ecox : Render init template sql] *****************************************
2021-04-30 14:57:42,214 p=18151 u=root n=ansible | ok: [172.21.0.16]
2021-04-30 14:57:42,217 p=18151 u=root n=ansible | TASK [ecox : Render default pg-init scripts] ***********************************
2021-04-30 14:57:42,973 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:42,976 p=18151 u=root n=ansible | TASK [ecox : Execute initialization scripts] ***********************************
2021-04-30 14:57:43,864 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:43,867 p=18151 u=root n=ansible | TASK [ecox : Stop primary] *****************************************************
2021-04-30 14:57:44,478 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:44,482 p=18151 u=root n=ansible | TASK [ecox : Launch EcoX on primary instance] **********************************
2021-04-30 14:57:44,991 p=18151 u=root n=ansible | changed: [172.21.0.16]
2021-04-30 14:57:44,995 p=18151 u=root n=ansible | TASK [ecox : Wait for postgres primary online] *********************************
2021-04-30 14:58:15,413 p=18151 u=root n=ansible | fatal: [172.21.0.16]: FAILED! => {"changed": false, "elapsed": 30, "msg": "Timeout when waiting for 172.21.0.16:5432"}
2021-04-30 14:58:15,413 p=18151 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2021-04-30 14:58:15,414 p=18151 u=root n=ansible | PLAY RECAP *********************************************************************
2021-04-30 14:58:15,414 p=18151 u=root n=ansible | 172.21.0.16                : ok=52   changed=23   unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
